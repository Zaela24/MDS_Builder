<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2020.1.3">
  <Settings>
    <Param name="Audio latency priority" updates="None" val="use prefs" valType="str"/>
    <Param name="Audio lib" updates="None" val="use prefs" valType="str"/>
    <Param name="Completed URL" updates="None" val="" valType="str"/>
    <Param name="Data filename" updates="None" val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code"/>
    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>
    <Param name="Experiment info" updates="None" val="{'participant':'', 'session':'001'}" valType="code"/>
    <Param name="Force stereo" updates="None" val="True" valType="bool"/>
    <Param name="Full-screen window" updates="None" val="True" valType="bool"/>
    <Param name="HTML path" updates="None" val="html" valType="str"/>
    <Param name="Incomplete URL" updates="None" val="" valType="str"/>
    <Param name="Monitor" updates="None" val="testMonitor" valType="str"/>
    <Param name="Save csv file" updates="None" val="False" valType="bool"/>
    <Param name="Save excel file" updates="None" val="False" valType="bool"/>
    <Param name="Save log file" updates="None" val="True" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
    <Param name="Show info dlg" updates="None" val="True" valType="bool"/>
    <Param name="Show mouse" updates="None" val="False" valType="bool"/>
    <Param name="Units" updates="None" val="height" valType="str"/>
    <Param name="Use version" updates="None" val="" valType="str"/>
    <Param name="Window size (pixels)" updates="None" val="(1024, 768)" valType="code"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="color" updates="None" val="$[0,0,0]" valType="str"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="expName" updates="None" val="mds_builder" valType="str"/>
    <Param name="exportHTML" updates="None" val="on Sync" valType="str"/>
    <Param name="logging level" updates="None" val="exp" valType="code"/>
  </Settings>
  <Routines>
    <Routine name="trial">
      <PolygonComponent name="left">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="set every repeat" val="$left_colors" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="set every repeat" val="$None" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="name" updates="None" val="left" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.12, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="rectangle" valType="str"/>
        <Param name="size" updates="constant" val="(0.08, 0.11)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PolygonComponent>
      <PolygonComponent name="right">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="set every repeat" val="$right_colors" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="set every repeat" val="$None" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="name" updates="None" val="right" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0.12, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="rectangle" valType="str"/>
        <Param name="size" updates="constant" val="(0.08, 0.11)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PolygonComponent>
      <KeyboardComponent name="key_resp">
        <Param name="allowedKeys" updates="constant" val="'1', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'num_1', 'num_2', 'num_3', 'num_4', 'num_5', 'num_6', 'num_7', 'num_8', 'num_9', 'num_10'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="first key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="instr">
      <TextComponent name="text">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="text" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Any text&amp;#10;&amp;#10;including line breaks" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_2">
        <Param name="allowedKeys" updates="constant" val="'f', 'a'" valType="code"/>
        <Param name="correctAns" updates="constant" val="$'a'" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_2" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="first key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <StaticComponent name="ISI">
        <Param name="code" updates="None" val="" valType="code"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="name" updates="None" val="ISI" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="0.5" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="False" valType="bool"/>
      </StaticComponent>
    </Routine>
    <Routine name="assign">
      <CodeComponent name="code_2">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="if ((key_resp_2.corr &gt;= 1)) {&amp;#10;    nRange = &quot;0:40&quot;;&amp;#10;} else {&amp;#10;    nRange = &quot;0:-1&quot;;&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="if key_resp_2.corr &gt;= 1:&amp;#10;    nRange = '0:40'&amp;#10;&amp;#10;else:&amp;#10;    nRange = '0:-1'" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_2" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="load"/>
  </Routines>
  <Flow>
    <Routine name="instr"/>
    <Routine name="assign"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="$nRange" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('left_colors', [0.9853, 0.6957, 0.7834]), ('right_colors', [0.9923, 0.6985, 0.716])]), OrderedDict([('left_colors', [0.9853, 0.6957, 0.7834]), ('right_colors', [0.9786, 0.7101, 0.6543])]), OrderedDict([('left_colors', [0.9923, 0.6985, 0.716]), ('right_colors', [0.9786, 0.7101, 0.6543])]), OrderedDict([('left_colors', [0.9923, 0.6985, 0.716]), ('right_colors', [0.9463, 0.7284, 0.604])]), OrderedDict([('left_colors', [0.9786, 0.7101, 0.6543]), ('right_colors', [0.9463, 0.7284, 0.604])]), OrderedDict([('left_colors', [0.9786, 0.7101, 0.6543]), ('right_colors', [0.8982, 0.7505, 0.5702])]), OrderedDict([('left_colors', [0.9463, 0.7284, 0.604]), ('right_colors', [0.8982, 0.7505, 0.5702])]), OrderedDict([('left_colors', [0.9463, 0.7284, 0.604]), ('right_colors', [0.838, 0.7734, 0.5567])]), OrderedDict([('left_colors', [0.8982, 0.7505, 0.5702]), ('right_colors', [0.838, 0.7734, 0.5567])]), OrderedDict([('left_colors', [0.8982, 0.7505, 0.5702]), ('right_colors', [0.7696, 0.7949, 0.5653])]), OrderedDict([('left_colors', [0.838, 0.7734, 0.5567]), ('right_colors', [0.7696, 0.7949, 0.5653])]), OrderedDict([('left_colors', [0.838, 0.7734, 0.5567]), ('right_colors', [0.6971, 0.8132, 0.5954])]), OrderedDict([('left_colors', [0.7696, 0.7949, 0.5653]), ('right_colors', [0.6971, 0.8132, 0.5954])]), OrderedDict([('left_colors', [0.7696, 0.7949, 0.5653]), ('right_colors', [0.6251, 0.8272, 0.6436])]), OrderedDict([('left_colors', [0.6971, 0.8132, 0.5954]), ('right_colors', [0.6251, 0.8272, 0.6436])]), OrderedDict([('left_colors', [0.6971, 0.8132, 0.5954]), ('right_colors', [0.5591, 0.8365, 0.7048])]), OrderedDict([('left_colors', [0.6251, 0.8272, 0.6436]), ('right_colors', [0.5591, 0.8365, 0.7048])]), OrderedDict([('left_colors', [0.6251, 0.8272, 0.6436]), ('right_colors', [0.5071, 0.8406, 0.7729])]), OrderedDict([('left_colors', [0.5591, 0.8365, 0.7048]), ('right_colors', [0.5071, 0.8406, 0.7729])]), OrderedDict([('left_colors', [0.5591, 0.8365, 0.7048]), ('right_colors', [0.4796, 0.8394, 0.8412])]), OrderedDict([('left_colors', [0.5071, 0.8406, 0.7729]), ('right_colors', [0.4796, 0.8394, 0.8412])]), OrderedDict([('left_colors', [0.5071, 0.8406, 0.7729]), ('right_colors', [0.486, 0.8329, 0.9031])]), OrderedDict([('left_colors', [0.4796, 0.8394, 0.8412]), ('right_colors', [0.486, 0.8329, 0.9031])]), OrderedDict([('left_colors', [0.4796, 0.8394, 0.8412]), ('right_colors', [0.5277, 0.8211, 0.9526])]), OrderedDict([('left_colors', [0.486, 0.8329, 0.9031]), ('right_colors', [0.5277, 0.8211, 0.9526])]), OrderedDict([('left_colors', [0.486, 0.8329, 0.9031]), ('right_colors', [0.5961, 0.8045, 0.9849])]), OrderedDict([('left_colors', [0.5277, 0.8211, 0.9526]), ('right_colors', [0.5961, 0.8045, 0.9849])]), OrderedDict([('left_colors', [0.5277, 0.8211, 0.9526]), ('right_colors', [0.6786, 0.7839, 0.9969])]), OrderedDict([('left_colors', [0.5961, 0.8045, 0.9849]), ('right_colors', [0.6786, 0.7839, 0.9969])]), OrderedDict([('left_colors', [0.5961, 0.8045, 0.9849]), ('right_colors', [0.7638, 0.7609, 0.9873])]), OrderedDict([('left_colors', [0.6786, 0.7839, 0.9969]), ('right_colors', [0.7638, 0.7609, 0.9873])]), OrderedDict([('left_colors', [0.6786, 0.7839, 0.9969]), ('right_colors', [0.8427, 0.7376, 0.9573])]), OrderedDict([('left_colors', [0.7638, 0.7609, 0.9873]), ('right_colors', [0.8427, 0.7376, 0.9573])]), OrderedDict([('left_colors', [0.7638, 0.7609, 0.9873]), ('right_colors', [0.9087, 0.717, 0.91])]), OrderedDict([('left_colors', [0.8427, 0.7376, 0.9573]), ('right_colors', [0.9087, 0.717, 0.91])]), OrderedDict([('left_colors', [0.8427, 0.7376, 0.9573]), ('right_colors', [0.9572, 0.7022, 0.8501])]), OrderedDict([('left_colors', [0.9087, 0.717, 0.91]), ('right_colors', [0.9572, 0.7022, 0.8501])]), OrderedDict([('left_colors', [0.9087, 0.717, 0.91]), ('right_colors', [0.9853, 0.6957, 0.7834])]), OrderedDict([('left_colors', [0.9572, 0.7022, 0.8501]), ('right_colors', [0.9853, 0.6957, 0.7834])]), OrderedDict([('left_colors', [0.9572, 0.7022, 0.8501]), ('right_colors', [0.9923, 0.6985, 0.716])]), OrderedDict([('left_colors', [0.9853, 0.6957, 0.7834]), ('right_colors', [0.9463, 0.7284, 0.604])]), OrderedDict([('left_colors', [0.9853, 0.6957, 0.7834]), ('right_colors', [0.8982, 0.7505, 0.5702])]), OrderedDict([('left_colors', [0.9853, 0.6957, 0.7834]), ('right_colors', [0.838, 0.7734, 0.5567])]), OrderedDict([('left_colors', [0.9853, 0.6957, 0.7834]), ('right_colors', [0.7696, 0.7949, 0.5653])]), OrderedDict([('left_colors', [0.9853, 0.6957, 0.7834]), ('right_colors', [0.6971, 0.8132, 0.5954])]), OrderedDict([('left_colors', [0.9853, 0.6957, 0.7834]), ('right_colors', [0.6251, 0.8272, 0.6436])]), OrderedDict([('left_colors', [0.9853, 0.6957, 0.7834]), ('right_colors', [0.5591, 0.8365, 0.7048])]), OrderedDict([('left_colors', [0.9853, 0.6957, 0.7834]), ('right_colors', [0.5071, 0.8406, 0.7729])]), OrderedDict([('left_colors', [0.9853, 0.6957, 0.7834]), ('right_colors', [0.4796, 0.8394, 0.8412])]), OrderedDict([('left_colors', [0.9853, 0.6957, 0.7834]), ('right_colors', [0.486, 0.8329, 0.9031])]), OrderedDict([('left_colors', [0.9853, 0.6957, 0.7834]), ('right_colors', [0.5277, 0.8211, 0.9526])]), OrderedDict([('left_colors', [0.9853, 0.6957, 0.7834]), ('right_colors', [0.5961, 0.8045, 0.9849])]), OrderedDict([('left_colors', [0.9853, 0.6957, 0.7834]), ('right_colors', [0.6786, 0.7839, 0.9969])]), OrderedDict([('left_colors', [0.9853, 0.6957, 0.7834]), ('right_colors', [0.7638, 0.7609, 0.9873])]), OrderedDict([('left_colors', [0.9853, 0.6957, 0.7834]), ('right_colors', [0.8427, 0.7376, 0.9573])]), OrderedDict([('left_colors', [0.9853, 0.6957, 0.7834]), ('right_colors', [0.9087, 0.717, 0.91])]), OrderedDict([('left_colors', [0.9853, 0.6957, 0.7834]), ('right_colors', [0.9572, 0.7022, 0.8501])]), OrderedDict([('left_colors', [0.9923, 0.6985, 0.716]), ('right_colors', [0.9853, 0.6957, 0.7834])]), OrderedDict([('left_colors', [0.9923, 0.6985, 0.716]), ('right_colors', [0.8982, 0.7505, 0.5702])]), OrderedDict([('left_colors', [0.9923, 0.6985, 0.716]), ('right_colors', [0.838, 0.7734, 0.5567])]), OrderedDict([('left_colors', [0.9923, 0.6985, 0.716]), ('right_colors', [0.7696, 0.7949, 0.5653])]), OrderedDict([('left_colors', [0.9923, 0.6985, 0.716]), ('right_colors', [0.6971, 0.8132, 0.5954])]), OrderedDict([('left_colors', [0.9923, 0.6985, 0.716]), ('right_colors', [0.6251, 0.8272, 0.6436])]), OrderedDict([('left_colors', [0.9923, 0.6985, 0.716]), ('right_colors', [0.5591, 0.8365, 0.7048])]), OrderedDict([('left_colors', [0.9923, 0.6985, 0.716]), ('right_colors', [0.5071, 0.8406, 0.7729])]), OrderedDict([('left_colors', [0.9923, 0.6985, 0.716]), ('right_colors', [0.4796, 0.8394, 0.8412])]), OrderedDict([('left_colors', [0.9923, 0.6985, 0.716]), ('right_colors', [0.486, 0.8329, 0.9031])]), OrderedDict([('left_colors', [0.9923, 0.6985, 0.716]), ('right_colors', [0.5277, 0.8211, 0.9526])]), OrderedDict([('left_colors', [0.9923, 0.6985, 0.716]), ('right_colors', [0.5961, 0.8045, 0.9849])]), OrderedDict([('left_colors', [0.9923, 0.6985, 0.716]), ('right_colors', [0.6786, 0.7839, 0.9969])]), OrderedDict([('left_colors', [0.9923, 0.6985, 0.716]), ('right_colors', [0.7638, 0.7609, 0.9873])]), OrderedDict([('left_colors', [0.9923, 0.6985, 0.716]), ('right_colors', [0.8427, 0.7376, 0.9573])]), OrderedDict([('left_colors', [0.9923, 0.6985, 0.716]), ('right_colors', [0.9087, 0.717, 0.91])]), OrderedDict([('left_colors', [0.9923, 0.6985, 0.716]), ('right_colors', [0.9572, 0.7022, 0.8501])]), OrderedDict([('left_colors', [0.9786, 0.7101, 0.6543]), ('right_colors', [0.9853, 0.6957, 0.7834])]), OrderedDict([('left_colors', [0.9786, 0.7101, 0.6543]), ('right_colors', [0.9923, 0.6985, 0.716])]), OrderedDict([('left_colors', [0.9786, 0.7101, 0.6543]), ('right_colors', [0.838, 0.7734, 0.5567])]), OrderedDict([('left_colors', [0.9786, 0.7101, 0.6543]), ('right_colors', [0.7696, 0.7949, 0.5653])]), OrderedDict([('left_colors', [0.9786, 0.7101, 0.6543]), ('right_colors', [0.6971, 0.8132, 0.5954])]), OrderedDict([('left_colors', [0.9786, 0.7101, 0.6543]), ('right_colors', [0.6251, 0.8272, 0.6436])]), OrderedDict([('left_colors', [0.9786, 0.7101, 0.6543]), ('right_colors', [0.5591, 0.8365, 0.7048])]), OrderedDict([('left_colors', [0.9786, 0.7101, 0.6543]), ('right_colors', [0.5071, 0.8406, 0.7729])]), OrderedDict([('left_colors', [0.9786, 0.7101, 0.6543]), ('right_colors', [0.4796, 0.8394, 0.8412])]), OrderedDict([('left_colors', [0.9786, 0.7101, 0.6543]), ('right_colors', [0.486, 0.8329, 0.9031])]), OrderedDict([('left_colors', [0.9786, 0.7101, 0.6543]), ('right_colors', [0.5277, 0.8211, 0.9526])]), OrderedDict([('left_colors', [0.9786, 0.7101, 0.6543]), ('right_colors', [0.5961, 0.8045, 0.9849])]), OrderedDict([('left_colors', [0.9786, 0.7101, 0.6543]), ('right_colors', [0.6786, 0.7839, 0.9969])]), OrderedDict([('left_colors', [0.9786, 0.7101, 0.6543]), ('right_colors', [0.7638, 0.7609, 0.9873])]), OrderedDict([('left_colors', [0.9786, 0.7101, 0.6543]), ('right_colors', [0.8427, 0.7376, 0.9573])]), OrderedDict([('left_colors', [0.9786, 0.7101, 0.6543]), ('right_colors', [0.9087, 0.717, 0.91])]), OrderedDict([('left_colors', [0.9786, 0.7101, 0.6543]), ('right_colors', [0.9572, 0.7022, 0.8501])]), OrderedDict([('left_colors', [0.9463, 0.7284, 0.604]), ('right_colors', [0.9853, 0.6957, 0.7834])]), OrderedDict([('left_colors', [0.9463, 0.7284, 0.604]), ('right_colors', [0.9923, 0.6985, 0.716])]), OrderedDict([('left_colors', [0.9463, 0.7284, 0.604]), ('right_colors', [0.9786, 0.7101, 0.6543])]), OrderedDict([('left_colors', [0.9463, 0.7284, 0.604]), ('right_colors', [0.7696, 0.7949, 0.5653])]), OrderedDict([('left_colors', [0.9463, 0.7284, 0.604]), ('right_colors', [0.6971, 0.8132, 0.5954])]), OrderedDict([('left_colors', [0.9463, 0.7284, 0.604]), ('right_colors', [0.6251, 0.8272, 0.6436])]), OrderedDict([('left_colors', [0.9463, 0.7284, 0.604]), ('right_colors', [0.5591, 0.8365, 0.7048])]), OrderedDict([('left_colors', [0.9463, 0.7284, 0.604]), ('right_colors', [0.5071, 0.8406, 0.7729])]), OrderedDict([('left_colors', [0.9463, 0.7284, 0.604]), ('right_colors', [0.4796, 0.8394, 0.8412])]), OrderedDict([('left_colors', [0.9463, 0.7284, 0.604]), ('right_colors', [0.486, 0.8329, 0.9031])]), OrderedDict([('left_colors', [0.9463, 0.7284, 0.604]), ('right_colors', [0.5277, 0.8211, 0.9526])]), OrderedDict([('left_colors', [0.9463, 0.7284, 0.604]), ('right_colors', [0.5961, 0.8045, 0.9849])]), OrderedDict([('left_colors', [0.9463, 0.7284, 0.604]), ('right_colors', [0.6786, 0.7839, 0.9969])]), OrderedDict([('left_colors', [0.9463, 0.7284, 0.604]), ('right_colors', [0.7638, 0.7609, 0.9873])]), OrderedDict([('left_colors', [0.9463, 0.7284, 0.604]), ('right_colors', [0.8427, 0.7376, 0.9573])]), OrderedDict([('left_colors', [0.9463, 0.7284, 0.604]), ('right_colors', [0.9087, 0.717, 0.91])]), OrderedDict([('left_colors', [0.9463, 0.7284, 0.604]), ('right_colors', [0.9572, 0.7022, 0.8501])]), OrderedDict([('left_colors', [0.8982, 0.7505, 0.5702]), ('right_colors', [0.9853, 0.6957, 0.7834])]), OrderedDict([('left_colors', [0.8982, 0.7505, 0.5702]), ('right_colors', [0.9923, 0.6985, 0.716])]), OrderedDict([('left_colors', [0.8982, 0.7505, 0.5702]), ('right_colors', [0.9786, 0.7101, 0.6543])]), OrderedDict([('left_colors', [0.8982, 0.7505, 0.5702]), ('right_colors', [0.9463, 0.7284, 0.604])]), OrderedDict([('left_colors', [0.8982, 0.7505, 0.5702]), ('right_colors', [0.6971, 0.8132, 0.5954])]), OrderedDict([('left_colors', [0.8982, 0.7505, 0.5702]), ('right_colors', [0.6251, 0.8272, 0.6436])]), OrderedDict([('left_colors', [0.8982, 0.7505, 0.5702]), ('right_colors', [0.5591, 0.8365, 0.7048])]), OrderedDict([('left_colors', [0.8982, 0.7505, 0.5702]), ('right_colors', [0.5071, 0.8406, 0.7729])]), OrderedDict([('left_colors', [0.8982, 0.7505, 0.5702]), ('right_colors', [0.4796, 0.8394, 0.8412])]), OrderedDict([('left_colors', [0.8982, 0.7505, 0.5702]), ('right_colors', [0.486, 0.8329, 0.9031])]), OrderedDict([('left_colors', [0.8982, 0.7505, 0.5702]), ('right_colors', [0.5277, 0.8211, 0.9526])]), OrderedDict([('left_colors', [0.8982, 0.7505, 0.5702]), ('right_colors', [0.5961, 0.8045, 0.9849])]), OrderedDict([('left_colors', [0.8982, 0.7505, 0.5702]), ('right_colors', [0.6786, 0.7839, 0.9969])]), OrderedDict([('left_colors', [0.8982, 0.7505, 0.5702]), ('right_colors', [0.7638, 0.7609, 0.9873])]), OrderedDict([('left_colors', [0.8982, 0.7505, 0.5702]), ('right_colors', [0.8427, 0.7376, 0.9573])]), OrderedDict([('left_colors', [0.8982, 0.7505, 0.5702]), ('right_colors', [0.9087, 0.717, 0.91])]), OrderedDict([('left_colors', [0.8982, 0.7505, 0.5702]), ('right_colors', [0.9572, 0.7022, 0.8501])]), OrderedDict([('left_colors', [0.838, 0.7734, 0.5567]), ('right_colors', [0.9853, 0.6957, 0.7834])]), OrderedDict([('left_colors', [0.838, 0.7734, 0.5567]), ('right_colors', [0.9923, 0.6985, 0.716])]), OrderedDict([('left_colors', [0.838, 0.7734, 0.5567]), ('right_colors', [0.9786, 0.7101, 0.6543])]), OrderedDict([('left_colors', [0.838, 0.7734, 0.5567]), ('right_colors', [0.9463, 0.7284, 0.604])]), OrderedDict([('left_colors', [0.838, 0.7734, 0.5567]), ('right_colors', [0.8982, 0.7505, 0.5702])]), OrderedDict([('left_colors', [0.838, 0.7734, 0.5567]), ('right_colors', [0.6251, 0.8272, 0.6436])]), OrderedDict([('left_colors', [0.838, 0.7734, 0.5567]), ('right_colors', [0.5591, 0.8365, 0.7048])]), OrderedDict([('left_colors', [0.838, 0.7734, 0.5567]), ('right_colors', [0.5071, 0.8406, 0.7729])]), OrderedDict([('left_colors', [0.838, 0.7734, 0.5567]), ('right_colors', [0.4796, 0.8394, 0.8412])]), OrderedDict([('left_colors', [0.838, 0.7734, 0.5567]), ('right_colors', [0.486, 0.8329, 0.9031])]), OrderedDict([('left_colors', [0.838, 0.7734, 0.5567]), ('right_colors', [0.5277, 0.8211, 0.9526])]), OrderedDict([('left_colors', [0.838, 0.7734, 0.5567]), ('right_colors', [0.5961, 0.8045, 0.9849])]), OrderedDict([('left_colors', [0.838, 0.7734, 0.5567]), ('right_colors', [0.6786, 0.7839, 0.9969])]), OrderedDict([('left_colors', [0.838, 0.7734, 0.5567]), ('right_colors', [0.7638, 0.7609, 0.9873])]), OrderedDict([('left_colors', [0.838, 0.7734, 0.5567]), ('right_colors', [0.8427, 0.7376, 0.9573])]), OrderedDict([('left_colors', [0.838, 0.7734, 0.5567]), ('right_colors', [0.9087, 0.717, 0.91])]), OrderedDict([('left_colors', [0.838, 0.7734, 0.5567]), ('right_colors', [0.9572, 0.7022, 0.8501])]), OrderedDict([('left_colors', [0.7696, 0.7949, 0.5653]), ('right_colors', [0.9853, 0.6957, 0.7834])]), OrderedDict([('left_colors', [0.7696, 0.7949, 0.5653]), ('right_colors', [0.9923, 0.6985, 0.716])]), OrderedDict([('left_colors', [0.7696, 0.7949, 0.5653]), ('right_colors', [0.9786, 0.7101, 0.6543])]), OrderedDict([('left_colors', [0.7696, 0.7949, 0.5653]), ('right_colors', [0.9463, 0.7284, 0.604])]), OrderedDict([('left_colors', [0.7696, 0.7949, 0.5653]), ('right_colors', [0.8982, 0.7505, 0.5702])]), OrderedDict([('left_colors', [0.7696, 0.7949, 0.5653]), ('right_colors', [0.838, 0.7734, 0.5567])]), OrderedDict([('left_colors', [0.7696, 0.7949, 0.5653]), ('right_colors', [0.5591, 0.8365, 0.7048])]), OrderedDict([('left_colors', [0.7696, 0.7949, 0.5653]), ('right_colors', [0.5071, 0.8406, 0.7729])]), OrderedDict([('left_colors', [0.7696, 0.7949, 0.5653]), ('right_colors', [0.4796, 0.8394, 0.8412])]), OrderedDict([('left_colors', [0.7696, 0.7949, 0.5653]), ('right_colors', [0.486, 0.8329, 0.9031])]), OrderedDict([('left_colors', [0.7696, 0.7949, 0.5653]), ('right_colors', [0.5277, 0.8211, 0.9526])]), OrderedDict([('left_colors', [0.7696, 0.7949, 0.5653]), ('right_colors', [0.5961, 0.8045, 0.9849])]), OrderedDict([('left_colors', [0.7696, 0.7949, 0.5653]), ('right_colors', [0.6786, 0.7839, 0.9969])]), OrderedDict([('left_colors', [0.7696, 0.7949, 0.5653]), ('right_colors', [0.7638, 0.7609, 0.9873])]), OrderedDict([('left_colors', [0.7696, 0.7949, 0.5653]), ('right_colors', [0.8427, 0.7376, 0.9573])]), OrderedDict([('left_colors', [0.7696, 0.7949, 0.5653]), ('right_colors', [0.9087, 0.717, 0.91])]), OrderedDict([('left_colors', [0.7696, 0.7949, 0.5653]), ('right_colors', [0.9572, 0.7022, 0.8501])]), OrderedDict([('left_colors', [0.6971, 0.8132, 0.5954]), ('right_colors', [0.9853, 0.6957, 0.7834])]), OrderedDict([('left_colors', [0.6971, 0.8132, 0.5954]), ('right_colors', [0.9923, 0.6985, 0.716])]), OrderedDict([('left_colors', [0.6971, 0.8132, 0.5954]), ('right_colors', [0.9786, 0.7101, 0.6543])]), OrderedDict([('left_colors', [0.6971, 0.8132, 0.5954]), ('right_colors', [0.9463, 0.7284, 0.604])]), OrderedDict([('left_colors', [0.6971, 0.8132, 0.5954]), ('right_colors', [0.8982, 0.7505, 0.5702])]), OrderedDict([('left_colors', [0.6971, 0.8132, 0.5954]), ('right_colors', [0.838, 0.7734, 0.5567])]), OrderedDict([('left_colors', [0.6971, 0.8132, 0.5954]), ('right_colors', [0.7696, 0.7949, 0.5653])]), OrderedDict([('left_colors', [0.6971, 0.8132, 0.5954]), ('right_colors', [0.5071, 0.8406, 0.7729])]), OrderedDict([('left_colors', [0.6971, 0.8132, 0.5954]), ('right_colors', [0.4796, 0.8394, 0.8412])]), OrderedDict([('left_colors', [0.6971, 0.8132, 0.5954]), ('right_colors', [0.486, 0.8329, 0.9031])]), OrderedDict([('left_colors', [0.6971, 0.8132, 0.5954]), ('right_colors', [0.5277, 0.8211, 0.9526])]), OrderedDict([('left_colors', [0.6971, 0.8132, 0.5954]), ('right_colors', [0.5961, 0.8045, 0.9849])]), OrderedDict([('left_colors', [0.6971, 0.8132, 0.5954]), ('right_colors', [0.6786, 0.7839, 0.9969])]), OrderedDict([('left_colors', [0.6971, 0.8132, 0.5954]), ('right_colors', [0.7638, 0.7609, 0.9873])]), OrderedDict([('left_colors', [0.6971, 0.8132, 0.5954]), ('right_colors', [0.8427, 0.7376, 0.9573])]), OrderedDict([('left_colors', [0.6971, 0.8132, 0.5954]), ('right_colors', [0.9087, 0.717, 0.91])]), OrderedDict([('left_colors', [0.6971, 0.8132, 0.5954]), ('right_colors', [0.9572, 0.7022, 0.8501])]), OrderedDict([('left_colors', [0.6251, 0.8272, 0.6436]), ('right_colors', [0.9853, 0.6957, 0.7834])]), OrderedDict([('left_colors', [0.6251, 0.8272, 0.6436]), ('right_colors', [0.9923, 0.6985, 0.716])]), OrderedDict([('left_colors', [0.6251, 0.8272, 0.6436]), ('right_colors', [0.9786, 0.7101, 0.6543])]), OrderedDict([('left_colors', [0.6251, 0.8272, 0.6436]), ('right_colors', [0.9463, 0.7284, 0.604])]), OrderedDict([('left_colors', [0.6251, 0.8272, 0.6436]), ('right_colors', [0.8982, 0.7505, 0.5702])]), OrderedDict([('left_colors', [0.6251, 0.8272, 0.6436]), ('right_colors', [0.838, 0.7734, 0.5567])]), OrderedDict([('left_colors', [0.6251, 0.8272, 0.6436]), ('right_colors', [0.7696, 0.7949, 0.5653])]), OrderedDict([('left_colors', [0.6251, 0.8272, 0.6436]), ('right_colors', [0.6971, 0.8132, 0.5954])]), OrderedDict([('left_colors', [0.6251, 0.8272, 0.6436]), ('right_colors', [0.4796, 0.8394, 0.8412])]), OrderedDict([('left_colors', [0.6251, 0.8272, 0.6436]), ('right_colors', [0.486, 0.8329, 0.9031])]), OrderedDict([('left_colors', [0.6251, 0.8272, 0.6436]), ('right_colors', [0.5277, 0.8211, 0.9526])]), OrderedDict([('left_colors', [0.6251, 0.8272, 0.6436]), ('right_colors', [0.5961, 0.8045, 0.9849])]), OrderedDict([('left_colors', [0.6251, 0.8272, 0.6436]), ('right_colors', [0.6786, 0.7839, 0.9969])]), OrderedDict([('left_colors', [0.6251, 0.8272, 0.6436]), ('right_colors', [0.7638, 0.7609, 0.9873])]), OrderedDict([('left_colors', [0.6251, 0.8272, 0.6436]), ('right_colors', [0.8427, 0.7376, 0.9573])]), OrderedDict([('left_colors', [0.6251, 0.8272, 0.6436]), ('right_colors', [0.9087, 0.717, 0.91])]), OrderedDict([('left_colors', [0.6251, 0.8272, 0.6436]), ('right_colors', [0.9572, 0.7022, 0.8501])]), OrderedDict([('left_colors', [0.5591, 0.8365, 0.7048]), ('right_colors', [0.9853, 0.6957, 0.7834])]), OrderedDict([('left_colors', [0.5591, 0.8365, 0.7048]), ('right_colors', [0.9923, 0.6985, 0.716])]), OrderedDict([('left_colors', [0.5591, 0.8365, 0.7048]), ('right_colors', [0.9786, 0.7101, 0.6543])]), OrderedDict([('left_colors', [0.5591, 0.8365, 0.7048]), ('right_colors', [0.9463, 0.7284, 0.604])]), OrderedDict([('left_colors', [0.5591, 0.8365, 0.7048]), ('right_colors', [0.8982, 0.7505, 0.5702])]), OrderedDict([('left_colors', [0.5591, 0.8365, 0.7048]), ('right_colors', [0.838, 0.7734, 0.5567])]), OrderedDict([('left_colors', [0.5591, 0.8365, 0.7048]), ('right_colors', [0.7696, 0.7949, 0.5653])]), OrderedDict([('left_colors', [0.5591, 0.8365, 0.7048]), ('right_colors', [0.6971, 0.8132, 0.5954])]), OrderedDict([('left_colors', [0.5591, 0.8365, 0.7048]), ('right_colors', [0.6251, 0.8272, 0.6436])]), OrderedDict([('left_colors', [0.5591, 0.8365, 0.7048]), ('right_colors', [0.486, 0.8329, 0.9031])]), OrderedDict([('left_colors', [0.5591, 0.8365, 0.7048]), ('right_colors', [0.5277, 0.8211, 0.9526])]), OrderedDict([('left_colors', [0.5591, 0.8365, 0.7048]), ('right_colors', [0.5961, 0.8045, 0.9849])]), OrderedDict([('left_colors', [0.5591, 0.8365, 0.7048]), ('right_colors', [0.6786, 0.7839, 0.9969])]), OrderedDict([('left_colors', [0.5591, 0.8365, 0.7048]), ('right_colors', [0.7638, 0.7609, 0.9873])]), OrderedDict([('left_colors', [0.5591, 0.8365, 0.7048]), ('right_colors', [0.8427, 0.7376, 0.9573])]), OrderedDict([('left_colors', [0.5591, 0.8365, 0.7048]), ('right_colors', [0.9087, 0.717, 0.91])]), OrderedDict([('left_colors', [0.5591, 0.8365, 0.7048]), ('right_colors', [0.9572, 0.7022, 0.8501])]), OrderedDict([('left_colors', [0.5071, 0.8406, 0.7729]), ('right_colors', [0.9853, 0.6957, 0.7834])]), OrderedDict([('left_colors', [0.5071, 0.8406, 0.7729]), ('right_colors', [0.9923, 0.6985, 0.716])]), OrderedDict([('left_colors', [0.5071, 0.8406, 0.7729]), ('right_colors', [0.9786, 0.7101, 0.6543])]), OrderedDict([('left_colors', [0.5071, 0.8406, 0.7729]), ('right_colors', [0.9463, 0.7284, 0.604])]), OrderedDict([('left_colors', [0.5071, 0.8406, 0.7729]), ('right_colors', [0.8982, 0.7505, 0.5702])]), OrderedDict([('left_colors', [0.5071, 0.8406, 0.7729]), ('right_colors', [0.838, 0.7734, 0.5567])]), OrderedDict([('left_colors', [0.5071, 0.8406, 0.7729]), ('right_colors', [0.7696, 0.7949, 0.5653])]), OrderedDict([('left_colors', [0.5071, 0.8406, 0.7729]), ('right_colors', [0.6971, 0.8132, 0.5954])]), OrderedDict([('left_colors', [0.5071, 0.8406, 0.7729]), ('right_colors', [0.6251, 0.8272, 0.6436])]), OrderedDict([('left_colors', [0.5071, 0.8406, 0.7729]), ('right_colors', [0.5591, 0.8365, 0.7048])]), OrderedDict([('left_colors', [0.5071, 0.8406, 0.7729]), ('right_colors', [0.5277, 0.8211, 0.9526])]), OrderedDict([('left_colors', [0.5071, 0.8406, 0.7729]), ('right_colors', [0.5961, 0.8045, 0.9849])]), OrderedDict([('left_colors', [0.5071, 0.8406, 0.7729]), ('right_colors', [0.6786, 0.7839, 0.9969])]), OrderedDict([('left_colors', [0.5071, 0.8406, 0.7729]), ('right_colors', [0.7638, 0.7609, 0.9873])]), OrderedDict([('left_colors', [0.5071, 0.8406, 0.7729]), ('right_colors', [0.8427, 0.7376, 0.9573])]), OrderedDict([('left_colors', [0.5071, 0.8406, 0.7729]), ('right_colors', [0.9087, 0.717, 0.91])]), OrderedDict([('left_colors', [0.5071, 0.8406, 0.7729]), ('right_colors', [0.9572, 0.7022, 0.8501])]), OrderedDict([('left_colors', [0.4796, 0.8394, 0.8412]), ('right_colors', [0.9853, 0.6957, 0.7834])]), OrderedDict([('left_colors', [0.4796, 0.8394, 0.8412]), ('right_colors', [0.9923, 0.6985, 0.716])]), OrderedDict([('left_colors', [0.4796, 0.8394, 0.8412]), ('right_colors', [0.9786, 0.7101, 0.6543])]), OrderedDict([('left_colors', [0.4796, 0.8394, 0.8412]), ('right_colors', [0.9463, 0.7284, 0.604])]), OrderedDict([('left_colors', [0.4796, 0.8394, 0.8412]), ('right_colors', [0.8982, 0.7505, 0.5702])]), OrderedDict([('left_colors', [0.4796, 0.8394, 0.8412]), ('right_colors', [0.838, 0.7734, 0.5567])]), OrderedDict([('left_colors', [0.4796, 0.8394, 0.8412]), ('right_colors', [0.7696, 0.7949, 0.5653])]), OrderedDict([('left_colors', [0.4796, 0.8394, 0.8412]), ('right_colors', [0.6971, 0.8132, 0.5954])]), OrderedDict([('left_colors', [0.4796, 0.8394, 0.8412]), ('right_colors', [0.6251, 0.8272, 0.6436])]), OrderedDict([('left_colors', [0.4796, 0.8394, 0.8412]), ('right_colors', [0.5591, 0.8365, 0.7048])]), OrderedDict([('left_colors', [0.4796, 0.8394, 0.8412]), ('right_colors', [0.5071, 0.8406, 0.7729])]), OrderedDict([('left_colors', [0.4796, 0.8394, 0.8412]), ('right_colors', [0.5961, 0.8045, 0.9849])]), OrderedDict([('left_colors', [0.4796, 0.8394, 0.8412]), ('right_colors', [0.6786, 0.7839, 0.9969])]), OrderedDict([('left_colors', [0.4796, 0.8394, 0.8412]), ('right_colors', [0.7638, 0.7609, 0.9873])]), OrderedDict([('left_colors', [0.4796, 0.8394, 0.8412]), ('right_colors', [0.8427, 0.7376, 0.9573])]), OrderedDict([('left_colors', [0.4796, 0.8394, 0.8412]), ('right_colors', [0.9087, 0.717, 0.91])]), OrderedDict([('left_colors', [0.4796, 0.8394, 0.8412]), ('right_colors', [0.9572, 0.7022, 0.8501])]), OrderedDict([('left_colors', [0.486, 0.8329, 0.9031]), ('right_colors', [0.9853, 0.6957, 0.7834])]), OrderedDict([('left_colors', [0.486, 0.8329, 0.9031]), ('right_colors', [0.9923, 0.6985, 0.716])]), OrderedDict([('left_colors', [0.486, 0.8329, 0.9031]), ('right_colors', [0.9786, 0.7101, 0.6543])]), OrderedDict([('left_colors', [0.486, 0.8329, 0.9031]), ('right_colors', [0.9463, 0.7284, 0.604])]), OrderedDict([('left_colors', [0.486, 0.8329, 0.9031]), ('right_colors', [0.8982, 0.7505, 0.5702])]), OrderedDict([('left_colors', [0.486, 0.8329, 0.9031]), ('right_colors', [0.838, 0.7734, 0.5567])]), OrderedDict([('left_colors', [0.486, 0.8329, 0.9031]), ('right_colors', [0.7696, 0.7949, 0.5653])]), OrderedDict([('left_colors', [0.486, 0.8329, 0.9031]), ('right_colors', [0.6971, 0.8132, 0.5954])]), OrderedDict([('left_colors', [0.486, 0.8329, 0.9031]), ('right_colors', [0.6251, 0.8272, 0.6436])]), OrderedDict([('left_colors', [0.486, 0.8329, 0.9031]), ('right_colors', [0.5591, 0.8365, 0.7048])]), OrderedDict([('left_colors', [0.486, 0.8329, 0.9031]), ('right_colors', [0.5071, 0.8406, 0.7729])]), OrderedDict([('left_colors', [0.486, 0.8329, 0.9031]), ('right_colors', [0.4796, 0.8394, 0.8412])]), OrderedDict([('left_colors', [0.486, 0.8329, 0.9031]), ('right_colors', [0.6786, 0.7839, 0.9969])]), OrderedDict([('left_colors', [0.486, 0.8329, 0.9031]), ('right_colors', [0.7638, 0.7609, 0.9873])]), OrderedDict([('left_colors', [0.486, 0.8329, 0.9031]), ('right_colors', [0.8427, 0.7376, 0.9573])]), OrderedDict([('left_colors', [0.486, 0.8329, 0.9031]), ('right_colors', [0.9087, 0.717, 0.91])]), OrderedDict([('left_colors', [0.486, 0.8329, 0.9031]), ('right_colors', [0.9572, 0.7022, 0.8501])]), OrderedDict([('left_colors', [0.5277, 0.8211, 0.9526]), ('right_colors', [0.9853, 0.6957, 0.7834])]), OrderedDict([('left_colors', [0.5277, 0.8211, 0.9526]), ('right_colors', [0.9923, 0.6985, 0.716])]), OrderedDict([('left_colors', [0.5277, 0.8211, 0.9526]), ('right_colors', [0.9786, 0.7101, 0.6543])]), OrderedDict([('left_colors', [0.5277, 0.8211, 0.9526]), ('right_colors', [0.9463, 0.7284, 0.604])]), OrderedDict([('left_colors', [0.5277, 0.8211, 0.9526]), ('right_colors', [0.8982, 0.7505, 0.5702])]), OrderedDict([('left_colors', [0.5277, 0.8211, 0.9526]), ('right_colors', [0.838, 0.7734, 0.5567])]), OrderedDict([('left_colors', [0.5277, 0.8211, 0.9526]), ('right_colors', [0.7696, 0.7949, 0.5653])]), OrderedDict([('left_colors', [0.5277, 0.8211, 0.9526]), ('right_colors', [0.6971, 0.8132, 0.5954])]), OrderedDict([('left_colors', [0.5277, 0.8211, 0.9526]), ('right_colors', [0.6251, 0.8272, 0.6436])]), OrderedDict([('left_colors', [0.5277, 0.8211, 0.9526]), ('right_colors', [0.5591, 0.8365, 0.7048])]), OrderedDict([('left_colors', [0.5277, 0.8211, 0.9526]), ('right_colors', [0.5071, 0.8406, 0.7729])]), OrderedDict([('left_colors', [0.5277, 0.8211, 0.9526]), ('right_colors', [0.4796, 0.8394, 0.8412])]), OrderedDict([('left_colors', [0.5277, 0.8211, 0.9526]), ('right_colors', [0.486, 0.8329, 0.9031])]), OrderedDict([('left_colors', [0.5277, 0.8211, 0.9526]), ('right_colors', [0.7638, 0.7609, 0.9873])]), OrderedDict([('left_colors', [0.5277, 0.8211, 0.9526]), ('right_colors', [0.8427, 0.7376, 0.9573])]), OrderedDict([('left_colors', [0.5277, 0.8211, 0.9526]), ('right_colors', [0.9087, 0.717, 0.91])]), OrderedDict([('left_colors', [0.5277, 0.8211, 0.9526]), ('right_colors', [0.9572, 0.7022, 0.8501])]), OrderedDict([('left_colors', [0.5961, 0.8045, 0.9849]), ('right_colors', [0.9853, 0.6957, 0.7834])]), OrderedDict([('left_colors', [0.5961, 0.8045, 0.9849]), ('right_colors', [0.9923, 0.6985, 0.716])]), OrderedDict([('left_colors', [0.5961, 0.8045, 0.9849]), ('right_colors', [0.9786, 0.7101, 0.6543])]), OrderedDict([('left_colors', [0.5961, 0.8045, 0.9849]), ('right_colors', [0.9463, 0.7284, 0.604])]), OrderedDict([('left_colors', [0.5961, 0.8045, 0.9849]), ('right_colors', [0.8982, 0.7505, 0.5702])]), OrderedDict([('left_colors', [0.5961, 0.8045, 0.9849]), ('right_colors', [0.838, 0.7734, 0.5567])]), OrderedDict([('left_colors', [0.5961, 0.8045, 0.9849]), ('right_colors', [0.7696, 0.7949, 0.5653])]), OrderedDict([('left_colors', [0.5961, 0.8045, 0.9849]), ('right_colors', [0.6971, 0.8132, 0.5954])]), OrderedDict([('left_colors', [0.5961, 0.8045, 0.9849]), ('right_colors', [0.6251, 0.8272, 0.6436])]), OrderedDict([('left_colors', [0.5961, 0.8045, 0.9849]), ('right_colors', [0.5591, 0.8365, 0.7048])]), OrderedDict([('left_colors', [0.5961, 0.8045, 0.9849]), ('right_colors', [0.5071, 0.8406, 0.7729])]), OrderedDict([('left_colors', [0.5961, 0.8045, 0.9849]), ('right_colors', [0.4796, 0.8394, 0.8412])]), OrderedDict([('left_colors', [0.5961, 0.8045, 0.9849]), ('right_colors', [0.486, 0.8329, 0.9031])]), OrderedDict([('left_colors', [0.5961, 0.8045, 0.9849]), ('right_colors', [0.5277, 0.8211, 0.9526])]), OrderedDict([('left_colors', [0.5961, 0.8045, 0.9849]), ('right_colors', [0.8427, 0.7376, 0.9573])]), OrderedDict([('left_colors', [0.5961, 0.8045, 0.9849]), ('right_colors', [0.9087, 0.717, 0.91])]), OrderedDict([('left_colors', [0.5961, 0.8045, 0.9849]), ('right_colors', [0.9572, 0.7022, 0.8501])]), OrderedDict([('left_colors', [0.6786, 0.7839, 0.9969]), ('right_colors', [0.9853, 0.6957, 0.7834])]), OrderedDict([('left_colors', [0.6786, 0.7839, 0.9969]), ('right_colors', [0.9923, 0.6985, 0.716])]), OrderedDict([('left_colors', [0.6786, 0.7839, 0.9969]), ('right_colors', [0.9786, 0.7101, 0.6543])]), OrderedDict([('left_colors', [0.6786, 0.7839, 0.9969]), ('right_colors', [0.9463, 0.7284, 0.604])]), OrderedDict([('left_colors', [0.6786, 0.7839, 0.9969]), ('right_colors', [0.8982, 0.7505, 0.5702])]), OrderedDict([('left_colors', [0.6786, 0.7839, 0.9969]), ('right_colors', [0.838, 0.7734, 0.5567])]), OrderedDict([('left_colors', [0.6786, 0.7839, 0.9969]), ('right_colors', [0.7696, 0.7949, 0.5653])]), OrderedDict([('left_colors', [0.6786, 0.7839, 0.9969]), ('right_colors', [0.6971, 0.8132, 0.5954])]), OrderedDict([('left_colors', [0.6786, 0.7839, 0.9969]), ('right_colors', [0.6251, 0.8272, 0.6436])]), OrderedDict([('left_colors', [0.6786, 0.7839, 0.9969]), ('right_colors', [0.5591, 0.8365, 0.7048])]), OrderedDict([('left_colors', [0.6786, 0.7839, 0.9969]), ('right_colors', [0.5071, 0.8406, 0.7729])]), OrderedDict([('left_colors', [0.6786, 0.7839, 0.9969]), ('right_colors', [0.4796, 0.8394, 0.8412])]), OrderedDict([('left_colors', [0.6786, 0.7839, 0.9969]), ('right_colors', [0.486, 0.8329, 0.9031])]), OrderedDict([('left_colors', [0.6786, 0.7839, 0.9969]), ('right_colors', [0.5277, 0.8211, 0.9526])]), OrderedDict([('left_colors', [0.6786, 0.7839, 0.9969]), ('right_colors', [0.5961, 0.8045, 0.9849])]), OrderedDict([('left_colors', [0.6786, 0.7839, 0.9969]), ('right_colors', [0.9087, 0.717, 0.91])]), OrderedDict([('left_colors', [0.6786, 0.7839, 0.9969]), ('right_colors', [0.9572, 0.7022, 0.8501])]), OrderedDict([('left_colors', [0.7638, 0.7609, 0.9873]), ('right_colors', [0.9853, 0.6957, 0.7834])]), OrderedDict([('left_colors', [0.7638, 0.7609, 0.9873]), ('right_colors', [0.9923, 0.6985, 0.716])]), OrderedDict([('left_colors', [0.7638, 0.7609, 0.9873]), ('right_colors', [0.9786, 0.7101, 0.6543])]), OrderedDict([('left_colors', [0.7638, 0.7609, 0.9873]), ('right_colors', [0.9463, 0.7284, 0.604])]), OrderedDict([('left_colors', [0.7638, 0.7609, 0.9873]), ('right_colors', [0.8982, 0.7505, 0.5702])]), OrderedDict([('left_colors', [0.7638, 0.7609, 0.9873]), ('right_colors', [0.838, 0.7734, 0.5567])]), OrderedDict([('left_colors', [0.7638, 0.7609, 0.9873]), ('right_colors', [0.7696, 0.7949, 0.5653])]), OrderedDict([('left_colors', [0.7638, 0.7609, 0.9873]), ('right_colors', [0.6971, 0.8132, 0.5954])]), OrderedDict([('left_colors', [0.7638, 0.7609, 0.9873]), ('right_colors', [0.6251, 0.8272, 0.6436])]), OrderedDict([('left_colors', [0.7638, 0.7609, 0.9873]), ('right_colors', [0.5591, 0.8365, 0.7048])]), OrderedDict([('left_colors', [0.7638, 0.7609, 0.9873]), ('right_colors', [0.5071, 0.8406, 0.7729])]), OrderedDict([('left_colors', [0.7638, 0.7609, 0.9873]), ('right_colors', [0.4796, 0.8394, 0.8412])]), OrderedDict([('left_colors', [0.7638, 0.7609, 0.9873]), ('right_colors', [0.486, 0.8329, 0.9031])]), OrderedDict([('left_colors', [0.7638, 0.7609, 0.9873]), ('right_colors', [0.5277, 0.8211, 0.9526])]), OrderedDict([('left_colors', [0.7638, 0.7609, 0.9873]), ('right_colors', [0.5961, 0.8045, 0.9849])]), OrderedDict([('left_colors', [0.7638, 0.7609, 0.9873]), ('right_colors', [0.6786, 0.7839, 0.9969])]), OrderedDict([('left_colors', [0.7638, 0.7609, 0.9873]), ('right_colors', [0.9572, 0.7022, 0.8501])]), OrderedDict([('left_colors', [0.8427, 0.7376, 0.9573]), ('right_colors', [0.9853, 0.6957, 0.7834])]), OrderedDict([('left_colors', [0.8427, 0.7376, 0.9573]), ('right_colors', [0.9923, 0.6985, 0.716])]), OrderedDict([('left_colors', [0.8427, 0.7376, 0.9573]), ('right_colors', [0.9786, 0.7101, 0.6543])]), OrderedDict([('left_colors', [0.8427, 0.7376, 0.9573]), ('right_colors', [0.9463, 0.7284, 0.604])]), OrderedDict([('left_colors', [0.8427, 0.7376, 0.9573]), ('right_colors', [0.8982, 0.7505, 0.5702])]), OrderedDict([('left_colors', [0.8427, 0.7376, 0.9573]), ('right_colors', [0.838, 0.7734, 0.5567])]), OrderedDict([('left_colors', [0.8427, 0.7376, 0.9573]), ('right_colors', [0.7696, 0.7949, 0.5653])]), OrderedDict([('left_colors', [0.8427, 0.7376, 0.9573]), ('right_colors', [0.6971, 0.8132, 0.5954])]), OrderedDict([('left_colors', [0.8427, 0.7376, 0.9573]), ('right_colors', [0.6251, 0.8272, 0.6436])]), OrderedDict([('left_colors', [0.8427, 0.7376, 0.9573]), ('right_colors', [0.5591, 0.8365, 0.7048])]), OrderedDict([('left_colors', [0.8427, 0.7376, 0.9573]), ('right_colors', [0.5071, 0.8406, 0.7729])]), OrderedDict([('left_colors', [0.8427, 0.7376, 0.9573]), ('right_colors', [0.4796, 0.8394, 0.8412])]), OrderedDict([('left_colors', [0.8427, 0.7376, 0.9573]), ('right_colors', [0.486, 0.8329, 0.9031])]), OrderedDict([('left_colors', [0.8427, 0.7376, 0.9573]), ('right_colors', [0.5277, 0.8211, 0.9526])]), OrderedDict([('left_colors', [0.8427, 0.7376, 0.9573]), ('right_colors', [0.5961, 0.8045, 0.9849])]), OrderedDict([('left_colors', [0.8427, 0.7376, 0.9573]), ('right_colors', [0.6786, 0.7839, 0.9969])]), OrderedDict([('left_colors', [0.8427, 0.7376, 0.9573]), ('right_colors', [0.7638, 0.7609, 0.9873])]), OrderedDict([('left_colors', [0.9087, 0.717, 0.91]), ('right_colors', [0.9923, 0.6985, 0.716])]), OrderedDict([('left_colors', [0.9087, 0.717, 0.91]), ('right_colors', [0.9786, 0.7101, 0.6543])]), OrderedDict([('left_colors', [0.9087, 0.717, 0.91]), ('right_colors', [0.9463, 0.7284, 0.604])]), OrderedDict([('left_colors', [0.9087, 0.717, 0.91]), ('right_colors', [0.8982, 0.7505, 0.5702])]), OrderedDict([('left_colors', [0.9087, 0.717, 0.91]), ('right_colors', [0.838, 0.7734, 0.5567])]), OrderedDict([('left_colors', [0.9087, 0.717, 0.91]), ('right_colors', [0.7696, 0.7949, 0.5653])]), OrderedDict([('left_colors', [0.9087, 0.717, 0.91]), ('right_colors', [0.6971, 0.8132, 0.5954])]), OrderedDict([('left_colors', [0.9087, 0.717, 0.91]), ('right_colors', [0.6251, 0.8272, 0.6436])]), OrderedDict([('left_colors', [0.9087, 0.717, 0.91]), ('right_colors', [0.5591, 0.8365, 0.7048])]), OrderedDict([('left_colors', [0.9087, 0.717, 0.91]), ('right_colors', [0.5071, 0.8406, 0.7729])]), OrderedDict([('left_colors', [0.9087, 0.717, 0.91]), ('right_colors', [0.4796, 0.8394, 0.8412])]), OrderedDict([('left_colors', [0.9087, 0.717, 0.91]), ('right_colors', [0.486, 0.8329, 0.9031])]), OrderedDict([('left_colors', [0.9087, 0.717, 0.91]), ('right_colors', [0.5277, 0.8211, 0.9526])]), OrderedDict([('left_colors', [0.9087, 0.717, 0.91]), ('right_colors', [0.5961, 0.8045, 0.9849])]), OrderedDict([('left_colors', [0.9087, 0.717, 0.91]), ('right_colors', [0.6786, 0.7839, 0.9969])]), OrderedDict([('left_colors', [0.9087, 0.717, 0.91]), ('right_colors', [0.7638, 0.7609, 0.9873])]), OrderedDict([('left_colors', [0.9087, 0.717, 0.91]), ('right_colors', [0.8427, 0.7376, 0.9573])]), OrderedDict([('left_colors', [0.9572, 0.7022, 0.8501]), ('right_colors', [0.9786, 0.7101, 0.6543])]), OrderedDict([('left_colors', [0.9572, 0.7022, 0.8501]), ('right_colors', [0.9463, 0.7284, 0.604])]), OrderedDict([('left_colors', [0.9572, 0.7022, 0.8501]), ('right_colors', [0.8982, 0.7505, 0.5702])]), OrderedDict([('left_colors', [0.9572, 0.7022, 0.8501]), ('right_colors', [0.838, 0.7734, 0.5567])]), OrderedDict([('left_colors', [0.9572, 0.7022, 0.8501]), ('right_colors', [0.7696, 0.7949, 0.5653])]), OrderedDict([('left_colors', [0.9572, 0.7022, 0.8501]), ('right_colors', [0.6971, 0.8132, 0.5954])]), OrderedDict([('left_colors', [0.9572, 0.7022, 0.8501]), ('right_colors', [0.6251, 0.8272, 0.6436])]), OrderedDict([('left_colors', [0.9572, 0.7022, 0.8501]), ('right_colors', [0.5591, 0.8365, 0.7048])]), OrderedDict([('left_colors', [0.9572, 0.7022, 0.8501]), ('right_colors', [0.5071, 0.8406, 0.7729])]), OrderedDict([('left_colors', [0.9572, 0.7022, 0.8501]), ('right_colors', [0.4796, 0.8394, 0.8412])]), OrderedDict([('left_colors', [0.9572, 0.7022, 0.8501]), ('right_colors', [0.486, 0.8329, 0.9031])]), OrderedDict([('left_colors', [0.9572, 0.7022, 0.8501]), ('right_colors', [0.5277, 0.8211, 0.9526])]), OrderedDict([('left_colors', [0.9572, 0.7022, 0.8501]), ('right_colors', [0.5961, 0.8045, 0.9849])]), OrderedDict([('left_colors', [0.9572, 0.7022, 0.8501]), ('right_colors', [0.6786, 0.7839, 0.9969])]), OrderedDict([('left_colors', [0.9572, 0.7022, 0.8501]), ('right_colors', [0.7638, 0.7609, 0.9873])]), OrderedDict([('left_colors', [0.9572, 0.7022, 0.8501]), ('right_colors', [0.8427, 0.7376, 0.9573])]), OrderedDict([('left_colors', [0.9572, 0.7022, 0.8501]), ('right_colors', [0.9087, 0.717, 0.91])])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="f_colors.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="trial"/>
    <LoopTerminator name="trials"/>
  </Flow>
</PsychoPy2experiment>
